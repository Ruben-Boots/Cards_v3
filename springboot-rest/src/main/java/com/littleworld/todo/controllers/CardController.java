
/* generated by: ControllerGenerator Wed May 18 15:20:45 CEST 2016 */
package com.littleworld.todo.controllers;

import com.littleworld.todo.model.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import java.util.List;

import com.littleworld.todo.services.CardService;

@CrossOrigin(origins = "http://localhost:4200")
@Controller
public class CardController {

    @Autowired  private CardService cardService;

    @Autowired  private CardRepoWhite cardWhite;

    @Autowired  private CardRepoBlack cardBlack;

    static ReadCards reader = new ReadCards();

    //curl -H "Content-Type: application/json" -X POST -d '{"id": 0, "task": "taskTest"}' http://localhost:8080/todo
    @ResponseBody
    @RequestMapping(value = "/card", method = RequestMethod.POST)
    public int create(@RequestBody Card card) {
        return cardService.save(card).getId();
    }

    //curl -H "Content-Type: application/json" -X PUT -d '{"id": 1, "task": "taskTest"}' http://localhost:8080/todo/1
    @ResponseBody
    @RequestMapping(value = "/card/{id}", method = RequestMethod.PUT)
    public int updateCard(@PathVariable  int id, @RequestBody Card card) { return cardService.save(card).getId();
    }

    //curl -X DELETE http://localhost:8080/todo/1
    @ResponseStatus(value = HttpStatus.OK)
    @RequestMapping(value = "/card/{id}", method = RequestMethod.DELETE)
    public void updateCard(@PathVariable  int id) {
        cardService.delete(id);
    }

    //curl  http://localhost:8080/todo
    @ResponseBody
    @RequestMapping(value = "/card", method = RequestMethod.GET)
    public WhiteCard[] findAll() {

        if(cardWhite.count()==0)
            reader.read(cardBlack,cardWhite);
        if(reader.trackwhite.isEmpty())
            reader.resetTrack(cardBlack,cardWhite);



        return reader.drawWhite(10,cardWhite);
    }

    //curl  http://localhost:8080/todo/1
    @ResponseBody
    @RequestMapping(value = "/card/{id}", method = RequestMethod.GET)
    public Card cardById(@PathVariable  int id) {
        return cardService.findOne(id);
    }

    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public String page() {
        return "card";
    }
}

